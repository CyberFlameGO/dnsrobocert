name: main

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_call:

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11, windows-2022]
        python: ["3.7", "3.10"]
        toxenv: [py3]
      fail-fast: false
      exclude:
        - os: ubuntu-20.04
          python: "3.10"
          toxenv: py3
      include:
        - os: ubuntu-20.04
          python: "3.10"
          toxenv: cover
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - run: |
          python -m pip install -U pip
          pip install poetry tox
      - run: tox
        env:
          TOXENV: ${{ matrix.toxenv }}
  docker:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: |
          docker build --tag adferrand/dnsrobocert:temp .
      - run: |
          mkdir -p ./bin
          curl -fsSL https://goss.rocks/install | GOSS_DST=./bin sh
          GOSS_PATH=./bin/goss GOSS_SLEEP=5 GOSS_FILES_PATH=./test/goss ./bin/dgoss run adferrand/dnsrobocert:temp
  quality:
    strategy:
      matrix:
        toxenv: [flake8, mypy]
      fail-fast: false
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - run: |
          python -m pip install -U pip
          pip install poetry tox
      - run: tox
        env:
          TOXENV: ${{ matrix.toxenv }}
      - run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov
        if: ${{ matrix.toxenv == 'cover' }}
